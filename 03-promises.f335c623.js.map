{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmBMC,EAAOC,SAASC,cAAc,QAiCpC,SAASC,EAAUC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC7BC,EAAAT,GAASU,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,CAGxE,SAASK,EAASP,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC5BC,EAAAT,GAASU,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,CApCrEN,EAAKa,iBAAiB,UAEtB,SAAkBC,G,kBAQd,IAAMR,EAAQS,EAAaC,EAAOC,EAC5BZ,EAAWY,EAAI,EAErBC,YAAW,YAMf,SAAuBb,EAAUC,GAC/B,IAAMa,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACnBL,EACFI,EAAI,CAAElB,WAAUC,UAEhBkB,EAAI,CAAEnB,WAAUC,S,KAZhBmB,CAAcpB,EAAUC,GAAOoB,KAAKvB,GAAWwB,MAAMhB,E,GACpDL,E,EAZLQ,EAAEc,iBAMF,IAJA,IAAMb,EAAac,OAAO7B,EAAKM,MAAMwB,OAC/Bd,EAAOa,OAAO7B,EAAKgB,KAAKc,OACxBC,EAASF,OAAO7B,EAAK+B,OAAOD,OAEzBE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз,\n// сколько ввели в поле amount. При каждом вызове передай ей номер создаваемого промиса(position)\n// и задержку учитывая введенную пользователем первую задержку(delay) и шаг(step).\n\n// Дополни код функции createPromise так, чтобы она возвращала один промис,\n// который выполянется или отклоняется через delay времени. Значением промиса должен быть объект,\n// в котором будут свойства position и delay со значениями одноименных параметров.\n// Используй начальный код функции для выбора того, что нужно сделать с промисом - выполнить или отклонить.\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const delayFirst = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const delay = delayFirst + step * i;\n    const position = i + 1;\n\n    setTimeout(() => {\n      createPromise(position, delay).then(onSuccess).catch(onReject);\n    }, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((res, rej) => {\n    if (shouldResolve) {\n      res({ position, delay });\n    } else {\n      rej({ position, delay });\n    }\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$onSuccess","param","position","delay","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onReject","failure","addEventListener","e","delayFirst","step","i","setTimeout","shouldResolve","Math","random","Promise","res","rej","$ce04d3a99e08e73b$var$createPromise","then","catch","preventDefault","Number","value","amount","i1","_loop"],"version":3,"file":"03-promises.f335c623.js.map"}