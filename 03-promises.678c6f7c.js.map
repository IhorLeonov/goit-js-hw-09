{"mappings":"qhBAMA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAuBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACnBL,EACFI,EAAI,C,SAAEN,E,MAAUC,IAEhBM,EAAI,C,SAAEP,E,MAAUC,GAAQ,G,CAK9B,SAASO,GAAUR,SAAEA,EAAQC,MAAEA,IAC7BQ,EAAAf,GAASgB,OAAOC,QAAQ,uBAAqBX,QAAiBC,M,CAGhE,SAASW,GAAQZ,SAAEA,EAAQC,MAAEA,IAC3BQ,EAAAf,GAASgB,OAAOG,QAAQ,sBAAoBb,QAAeC,M,CAvC7DL,EAAKkB,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAEF,MAAMC,EAAaC,OAAOtB,EAAKK,MAAMkB,OAC/BC,EAAOF,OAAOtB,EAAKwB,KAAKD,OACxBE,EAASH,OAAOtB,EAAKyB,OAAOF,OAElC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,MAAMrB,EAAQgB,EAAaG,EAAOE,EAC5BtB,EAAWsB,EAAI,EAErBC,YAAW,KACTxB,EAAcC,EAAUC,GACrBuB,KAAKhB,GACLiB,MAAMb,GACNc,SAAQ,IAAM9B,EAAK+B,SAAQ,GAC7B1B,E","sources":["src/js/03-promises.js"],"sourcesContent":["// ✅ Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз, сколько ввели в поле amount.\n// ✅ При каждом вызове передай ей номер создаваемого промиса(position) и задержку учитывая введенную пользователем первую задержку(delay) и шаг(step).\n// ✅ Дополни код функции createPromise так, чтобы она возвращала один промис, который выполянется или отклоняется через delay времени.\n// ✅ Значением промиса должен быть объект, в котором будут свойства position и delay со значениями одноименных параметров.\n// ✅ Используй начальный код функции для выбора того, что нужно сделать с промисом - выполнить или отклонить.\n\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const delayFirst = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const delay = delayFirst + step * i;\n    const position = i + 1;\n\n    setTimeout(() => {\n      createPromise(position, delay)\n        .then(onSuccess)\n        .catch(onError)\n        .finally(() => form.reset());\n    }, delay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((res, rej) => {\n    if (shouldResolve) {\n      res({ position, delay });\n    } else {\n      rej({ position, delay });\n    }\n  });\n}\n\nfunction onSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","$47d4ff9957288465$var$onSuccess","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onError","failure","addEventListener","e","preventDefault","delayFirst","Number","value","step","amount","i","setTimeout","then","catch","finally","reset"],"version":3,"file":"03-promises.678c6f7c.js.map"}